# -*- coding: utf-8 -*-
"""projeto Inventário de Ativos de TI

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bQLkCDeqNDCJCEpn6_Nkck8BL24d1vwn
"""

!pip install Faker

import pandas as pd
from faker import Faker
import random

fake = Faker('pt_BR')

# Gerar dados para a tabela de Fornecedores
fornecedores_data = []
for i in range(5):
    fornecedores_data.append({
        'id': i + 1,
        'nome': fake.company(),
        'contato': fake.email()
    })

# Gerar dados para a tabela de Ativos
ativos_data = []
tipos_ativos = ['Desktop', 'Laptop', 'Servidor', 'Impressora', 'Switch']
marcas = ['Dell', 'HP', 'Lenovo', 'Cisco', 'Samsung']
localizacoes = ['Escritório Principal', 'Filial Norte', 'Datacenter', 'Home Office']

for i in range(50):
    ativo = {
        'id': i + 1,
        'tipo': random.choice(tipos_ativos),
        'marca': random.choice(marcas),
        'modelo': fake.bothify(text='??-####'),
        'data_aquisicao': fake.date_between(start_date='-5y', end_date='today').isoformat(),
        'garantia_meses': random.choice([12, 24, 36, 60]),
        'localizacao': random.choice(localizacoes),
        'fornecedor_id': random.randint(1, 5) # Relaciona com a tabela de fornecedores
    }
    ativos_data.append(ativo)

print("Dados sintéticos gerados com sucesso!")

import sqlite3

# Conectar ao banco de dados (o arquivo 'inventario.db' será criado)
conn = sqlite3.connect('inventario.db')
cursor = conn.cursor()

# Criar a tabela de fornecedores
cursor.execute('''
    CREATE TABLE IF NOT EXISTS fornecedores (
        id INTEGER PRIMARY KEY,
        nome TEXT NOT NULL,
        contato TEXT NOT NULL
    );
''')

# Criar a tabela de ativos
cursor.execute('''
    CREATE TABLE IF NOT EXISTS ativos (
        id INTEGER PRIMARY KEY,
        tipo TEXT,
        marca TEXT,
        modelo TEXT,
        data_aquisicao DATE,
        garantia_meses INTEGER,
        localizacao TEXT,
        fornecedor_id INTEGER,
        FOREIGN KEY (fornecedor_id) REFERENCES fornecedores(id)
    );
''')

# Popular a tabela de fornecedores
cursor.executemany("INSERT INTO fornecedores (id, nome, contato) VALUES (?, ?, ?)",
                   [(f['id'], f['nome'], f['contato']) for f in fornecedores_data])

# Popular a tabela de ativos
cursor.executemany("INSERT INTO ativos (id, tipo, marca, modelo, data_aquisicao, garantia_meses, localizacao, fornecedor_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
                   [(a['id'], a['tipo'], a['marca'], a['modelo'], a['data_aquisicao'], a['garantia_meses'], a['localizacao'], a['fornecedor_id']) for a in ativos_data])

# Salvar as mudanças
conn.commit()
print("Banco de dados criado e populado com sucesso!")

query_garantia = """
SELECT
    id,
    tipo,
    marca,
    modelo,
    data_aquisicao,
    garantia_meses
FROM ativos
WHERE (strftime('%Y', 'now') - strftime('%Y', data_aquisicao)) * 12 +
      (strftime('%m', 'now') - strftime('%m', data_aquisicao)) > garantia_meses;
"""
df_garantia = pd.read_sql_query(query_garantia, conn)
print("### Ativos Fora da Garantia ###")
print(df_garantia)

query_localizacao = """
SELECT
    localizacao,
    COUNT(*) AS total_ativos
FROM ativos
GROUP BY localizacao;
"""
df_localizacao = pd.read_sql_query(query_localizacao, conn)
print("\n### Contagem de Ativos por Localização ###")
print(df_localizacao)

query_idade_media = """
SELECT
    tipo,
    AVG((julianday('now') - julianday(data_aquisicao)) / 30.4375) AS idade_media_meses
FROM ativos
GROUP BY tipo;
"""
df_idade_media = pd.read_sql_query(query_idade_media, conn)
print("\n### Idade Média dos Ativos por Tipo (em meses) ###")
print(df_idade_media)

import matplotlib.pyplot as plt

plt.style.use('ggplot')
plt.figure(figsize=(10, 6))

plt.bar(df_localizacao['localizacao'], df_localizacao['total_ativos'], color='skyblue')
plt.title('Distribuição de Ativos por Localização')
plt.xlabel('Localização')
plt.ylabel('Total de Ativos')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

# Não se esqueça de fechar a conexão no final do seu notebook
conn.close()

"""Com este projeto, você terá uma visão completa de como é o fluxo de trabalho de um cientista de dados ou analista de BI, desde a coleta de dados até a visualização de resultados, tudo em um só lugar."""